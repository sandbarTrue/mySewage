package com.cqupt.project.controller;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.cqupt.project.model.Bid;
import com.cqupt.project.model.ReturnStatus;
import com.cqupt.project.service.AttachmentService;
import com.cqupt.project.service.BidService;
import com.cqupt.project.utils.JSONUtils;

@Controller("bidController")
@RequestMapping("/bid")
public class BidController {
	@Resource
	private BidService bidService;
	
	@Resource
	private AttachmentService attachmentService;
	@RequestMapping("/addBid")
<<<<<<< .mine
    public void addBid(Bid b, HttpServletRequest request,HttpServletResponse response,@RequestParam("files")CommonsMultipartFile[] files) {
=======
    public void addBid(Bid b, HttpServletRequest request, HttpServletResponse response, @RequestParam("file")CommonsMultipartFile[] files) {
>>>>>>> .r34
		Map<String,Object> map  = new HashMap<String,Object>();
		 String FileId=UUID.randomUUID().toString();
		 b.setFileId(FileId);
		 String realPath=request.getSession().getServletContext().getRealPath("/")+"uplode/";
		 int result=bidService.addBid(b);
	     boolean result2=attachmentService.addAttachment(files, FileId, realPath);
	     
	        if(result==1 && result2){
			map.put("status", ReturnStatus.SUCCSS);
			map.put("0", "0");
	        }
	       else{
	    	map.put("status",ReturnStatus.ERROR);
	    	map.put("1", "1");
	    	map.put("Error_Massage","500");
	    	
	       }
		JSONUtils.toJSON(map, response);
	}
	@RequestMapping("/delBid")
	public void delBid(HttpServletResponse response,int  id){
		Map<String,Object> map  = new HashMap<String,Object>();
	    int result= bidService.deleteBid(id);
	    if(result==1){
	    	map.put("status", ReturnStatus.SUCCSS);
			map.put("0", "0");
	        }
	       else{
	    	map.put("status",ReturnStatus.ERROR);
	    	map.put("1", "1");
	    	map.put("Error_Massage","500");
	    	
	    }
	   JSONUtils.toJSON(map, response); 
	}
	@RequestMapping("/modifyBidDetail")
	public void modifyBidDetail(HttpServletResponse response,int  id,String bidDetail){
		Map<String,Object> map  = new HashMap<String,Object>();
		int result=bidService.modifyBidDetail(id, bidDetail);
		  if(result==1){
		    	map.put("status", ReturnStatus.SUCCSS);
				map.put("0", "0");
		        }
		       else{
		    	map.put("status",ReturnStatus.ERROR);
		    	map.put("1", "1");
		    	map.put("Error_Massage","500");	
		    }
		   JSONUtils.toJSON(map, response); 
	}
	@RequestMapping("/modifyBidFile")
	public void modifyBidFile(HttpServletResponse response,int  id,String fileId){
		Map<String,Object> map  = new HashMap<String,Object>();
		//删除附件，添加附件或者直接添加附件
		int result=bidService.modifyBidFile(id, fileId);
		  if(result==1){
			
		    	map.put("status", ReturnStatus.SUCCSS);
				map.put("0", "0");
		        }
		       else{
		    	map.put("status",ReturnStatus.ERROR);
		    	map.put("1", "1");
		    	map.put("Error_Massage","500");	
		    }
		   JSONUtils.toJSON(map, response); 
	}
	
	
}
